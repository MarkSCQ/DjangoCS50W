# Generated by Django 3.1 on 2020-09-07 19:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='auction_list',
            fields=[
                ('items_end_date', models.DateTimeField(auto_created=True, verbose_name='End Date')),
                ('items_start_date', models.DateTimeField(auto_created=True, verbose_name='Start Date')),
                ('auction_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Auction ID')),
                ('auction_state', models.CharField(choices=[('1', 'Not Available'), ('2', 'Available')], default='1', max_length=50, verbose_name='Auction State')),
                ('auction_bid_count', models.IntegerField(blank=True, null=True, verbose_name='Bid Count')),
            ],
            options={
                'verbose_name': 'Auction',
                'verbose_name_plural': 'Auction',
            },
        ),
        migrations.CreateModel(
            name='category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_item', models.CharField(max_length=200, verbose_name='Category')),
                ('category_description', models.CharField(max_length=1000, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Item Category',
                'verbose_name_plural': 'Item Category',
            },
        ),
        migrations.CreateModel(
            name='item_info',
            fields=[
                ('item_name', models.CharField(max_length=200, verbose_name='Name')),
                ('item_description', models.TextField(max_length=1000, verbose_name='Description')),
                ('item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Item ID')),
                ('item_origin_price', models.FloatField(max_length=64, verbose_name='Origin Price')),
                ('item_state', models.CharField(choices=[('1', 'Not Available'), ('2', 'For Sale'), ('3', 'Sold Out')], default='1', max_length=50, verbose_name='Item State')),
                ('item_publish_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Publish date')),
                ('item_img', models.ImageField(blank=True, max_length=255, null=True, upload_to='pictures/')),
                ('item_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auctions.category', verbose_name='Category')),
                ('item_publisher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owener', to=settings.AUTH_USER_MODEL, verbose_name='Publisher')),
            ],
            options={
                'verbose_name': 'Item Info',
                'verbose_name_plural': 'Item Info',
            },
        ),
        migrations.CreateModel(
            name='watchlists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watchlist_auction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='watchlists_auction', to='auctions.auction_list', verbose_name='Auction')),
                ('watchlist_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='watchlist_item', to='auctions.item_info', verbose_name='item')),
                ('watchlist_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='watchlist_user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Watchlist',
                'verbose_name_plural': 'Watchlist',
            },
        ),
        migrations.CreateModel(
            name='comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_date', models.DateTimeField(auto_created=True, verbose_name='Comment Date')),
                ('comment_content', models.CharField(max_length=200, verbose_name='Comment')),
                ('comment_bid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_bid', to='auctions.auction_list', verbose_name='Bid')),
                ('comment_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comment',
            },
        ),
        migrations.CreateModel(
            name='bid_info',
            fields=[
                ('bid_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Bid ID')),
                ('bid_date', models.DateTimeField(auto_now_add=True, verbose_name='Bid date')),
                ('bid_price', models.FloatField(max_length=64, verbose_name='Bid Price')),
                ('bid_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bid_item', to='auctions.item_info', verbose_name='Item')),
                ('bid_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bid_user', to=settings.AUTH_USER_MODEL, verbose_name='Bider')),
            ],
            options={
                'verbose_name': 'Bid Info',
                'verbose_name_plural': 'Bid Info',
            },
        ),
        migrations.AddField(
            model_name='auction_list',
            name='auction_bid',
            field=models.ManyToManyField(blank=True, related_name='Auction', to='auctions.bid_info'),
        ),
        migrations.AddField(
            model_name='auction_list',
            name='auction_item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auction_item_name', to='auctions.item_info', verbose_name='Auction item'),
        ),
    ]
